pip install tensorflow,keras

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense,Activation
from tensorflow.keras.utils import to_categorical
from tensorflow.keras.datasets import mnist
import numpy as np
import matplotlib.pyplot as plt

(x_train,y_train),(x_test,y_test)=mnist.load_data()
print('x_train shape',x_train.shape)
print('y_train shape',y_train.shape)
print('x_test shape',x_test.shape)
print("y_test shape",y_test.shape)

X_train=x_train.reshape(60000,784)
X_test=x_test.reshape(10000,784)
X_train=X_train.astype('float32')
X_test=X_test.astype('float32')
X_train/=255
X_test/=255
print('X Traning matrix shape',X_train.shape)
print('X Testing matrix shape',X_test.shape)

Y_train=to_categorical(y_train,10)
Y_test=to_categorical(y_test,10)
print('Y Training matrix shape',Y_train.shape)
print('Y Testind matrix shape',Y_test.shape)

model=Sequential()
model.add(Dense(512,input_shape=(784,)))
model.add(Activation('relu'))
model.add(Dense(256))
model.add(Activation('relu'))
model.add(Dense(10))
model.add(Activation('softmax'))
model.summary()

model.compile(loss='categorical_crossentropy',optimizer='adam', metrics=['accuracy'])
model.fit(X_train,Y_train,batch_size=128,epochs=10,verbose=1)

score=model.evaluate(X_test,Y_test)
print('Test score:',score[0])
print('Test acceracy:',score[1])

predicted_classes=np.argmax(model.predict(X_test),axis=1)
correct_indices=np.nonzero(predicted_classes === y_test)[0]
incorrect_indices=np.nonzero(predcted_classes !=y_test)[0]

plt.figure()
for i in range(9):
    plt.subplot(33,3,i+1)
    correct=correct_indices[i]
    plt.imshow(X_test[correct].reshape(28,28),cmap='gray')
    plt.title('predicted{},Class{}'.format(predicted_classes[correct],y_test[correct]))
    plt.tight_layout()
    
    plt.figure()
for i in range(9):
    plt.subplot(3,3,i+1)
    incorrect=incorrect_indices[i]
    plt.imshow(X_test[correct].reshape)
